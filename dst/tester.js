// Generated by CoffeeScript 1.4.0
(function() {
  var csv, evaluator, getFailures, getTemplate, getUnbound, parser, test, testJson;

  csv = require('csv');

  parser = require('../dst/parser');

  parser.parser.yy = require('./nodes');

  evaluator = require('./evaluator');

  getTemplate = function(formula_src) {
    var formula, lets;
    formula = parser.parse(formula_src);
    lets = evaluator.unbound(formula);
    lets.push('expected');
    lets.unshift('message');
    return lets.join(',');
  };

  getUnbound = function(formula_src) {
    var formula;
    formula = parser.parse(formula_src);
    return evaluator.unbound(formula);
  };

  test = function(formula_src, csv_src, report) {
    var formula, results;
    formula = parser.parse(formula_src);
    results = [];
    return csv().from(csv_src, {
      columns: true
    }).transform(function(data) {
      data.actual = evaluator.evaluate(formula, data);
      return results.push(data);
    }).on('end', function() {
      return report(results);
    });
  };

  testJson = function(formula_src, json, report) {
    var data, formula, _i, _len;
    formula = parser.parse(formula_src);
    for (_i = 0, _len = json.length; _i < _len; _i++) {
      data = json[_i];
      data.actual = evaluator.evaluate(formula, data);
    }
    return report(json);
  };

  getFailures = function(results) {
    var data, failures, index, message, _i, _len;
    failures = [];
    for (index = _i = 0, _len = results.length; _i < _len; index = ++_i) {
      data = results[index];
      message = "Row " + (index + 1) + ":  expected " + data.actual + " to equal " + data.expected + ".  " + data.message + ".";
      if (data.actual !== data.expected) {
        failures.push(message);
      }
    }
    return failures;
  };

  module.exports = {
    getTemplate: getTemplate,
    getUnbound: getUnbound,
    test: test,
    testJson: testJson,
    getFailures: getFailures
  };

}).call(this);
