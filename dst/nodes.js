// Generated by CoffeeScript 1.4.0
(function() {
  var DecimalLiteral, FunctionCall, InfixExpression, IntegerLiteral, Parens, Reference, StringLiteral;

  InfixExpression = (function() {

    function InfixExpression(operator, left, right) {
      this.operator = operator;
      this.left = left;
      this.right = right;
    }

    InfixExpression.prototype.visit = function(visitor) {
      return visitor.visitInfixExpression(this);
    };

    return InfixExpression;

  })();

  Parens = (function() {

    function Parens(formula) {
      this.formula = formula;
    }

    Parens.prototype.visit = function(visitor) {
      return visitor.visitParens(this);
    };

    return Parens;

  })();

  StringLiteral = (function() {

    function StringLiteral(value) {
      this.value = value;
    }

    StringLiteral.prototype.visit = function(visitor) {
      return visitor.visitStringLiteral(this);
    };

    return StringLiteral;

  })();

  DecimalLiteral = (function() {

    function DecimalLiteral(whole, part) {
      this.value = parseFloat(whole + '.' + part);
    }

    DecimalLiteral.prototype.visit = function(visitor) {
      return visitor.visitDecimalLiteral(this);
    };

    return DecimalLiteral;

  })();

  IntegerLiteral = (function() {

    function IntegerLiteral(val) {
      this.value = parseInt(val);
    }

    IntegerLiteral.prototype.visit = function(visitor) {
      return visitor.visitIntegerLiteral(this);
    };

    return IntegerLiteral;

  })();

  Reference = (function() {

    function Reference(names) {
      this.name = names.join('.');
    }

    Reference.prototype.visit = function(visitor) {
      return visitor.visitReference(this);
    };

    return Reference;

  })();

  FunctionCall = (function() {

    function FunctionCall(fn, parameters) {
      this.parameters = parameters;
      this.name = fn.toLowerCase();
    }

    FunctionCall.prototype.visit = function(visitor) {
      return visitor.visitFunctionCall(this);
    };

    return FunctionCall;

  })();

  module.exports = {
    InfixExpression: InfixExpression,
    Parens: Parens,
    StringLiteral: StringLiteral,
    IntegerLiteral: IntegerLiteral,
    DecimalLiteral: DecimalLiteral,
    Reference: Reference,
    FunctionCall: FunctionCall
  };

}).call(this);
